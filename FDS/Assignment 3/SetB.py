import pandas as pd
import numpy as np
from sklearn import preprocessing
from scipy import stats
df = pd.read_csv(r'C:\Users\21Lab\Downloads\winequality-red.csv')
print(df.head())
print("\nRescaling")
r = preprocessing.MinMaxScaler(feature_range=(0, 1))
df_numeric = df.select_dtypes(include=[np.number]) 
r1 = r.fit_transform(df_numeric)
print("\nMin-Max Scaled Data")
print(pd.DataFrame(r1, columns=df_numeric.columns).round(2))
print("\nStandardizing Data")
print("---------------")
X_train = np.array([[1., -1., 2.], [2., 0., 0.], [0., 1., -1.]])
print("Original Data \n", X_train)
print("\nInitial Mean: ", X_train.mean().round(2))
print("Initial S.D: ", X_train.std().round(2))
X_scaled = preprocessing.scale(X_train)
print("\nStandardized Data\n", X_scaled.round(2))
print("\nScaled Mean: ", X_scaled.mean().round(2))
print("Scaled S.D.: ", X_scaled.std().round(2))
print("\nNormalization")
dn = preprocessing.normalize(df_numeric, norm='l1')
print("L1 Normalized Data")
print(pd.DataFrame(dn, columns=df_numeric.columns).round(2))
print("\nBinarize Data")
b = preprocessing.Binarizer(threshold=1).transform(df_numeric)
print(pd.DataFrame(b, columns=df_numeric.columns))
